# this will need to increase depending on which plugins/apis you use
# 40 GB should be sufficient for a consensus node
shared-file-size = 40G

# Endpoint for P2P node to listen on
# p2p-endpoint =

# Maxmimum number of incoming connections on P2P endpoint
# p2p-max-connections =

# P2P nodes to connect to on startup (may specify multiple times)
seed-node = peer.weyoume.io:2001

# Pairs of [BLOCK_NUM,BLOCK_ID] that should be enforced as checkpoints.
# checkpoint =

# Endpoint for websocket RPC to listen on
# rpc-endpoint =

# Endpoint for TLS websocket RPC to listen on
# rpc-tls-endpoint =

# The TLS certificate file for this server
# server-pem =

# Password for this certificate
# server-pem-password =

# Block signing key to use for init producers, overrides genesis file
# dbg-init-key =

# API user specification, may be specified multiple times
# api-user =

# Set an API to be publicly available, may be specified multiple times
public-api = database_api login_api network_broadcast_api

# Plugin(s) to enable, may be specified multiple times
enable-plugin = producer

# JSON list of [nblocks,nseconds] pairs, see doc/bcd-trigger.md
bcd-trigger = [[0,10],[85,300]]

# Defines a range of accounts to track as a json pair ["from","to"] [from,to]
# track-account-range =

# Ignore posting operations, only track transfers and account updates
# filter-posting-ops =

# Database edits to apply on startup (may specify multiple times)
# edit-script =

# RPC endpoint of a trusted validating node (required)
# trusted-node =

# Set the maximum size of cached feed for an account
follow-max-feed-size = 500

# Track market history by grouping orders into durations of equal size measured in seconds specified as a JSON array of numbers
duration-size = [60,300,3600,86400,604800]

# How far back in time to track history for each duration size, measured in the number of durations (default: 20000)
history-per-size = 20000

# Enable block production, even if the chain is stale.
enable-stale-production = false

# Percent of producers (0-99) that must be participating in order to produce blocks
required-participation = false

# name of producer controlled by this node (e.g. init_producer )
# producer =

# name of miner and its private key (e.g. ["account","WIF PRIVATE KEY"] )
# miner =

# Number of threads to use for proof of work mining
# mining-threads = 2

# WIF PRIVATE KEY to be used by one or more producers or miners
# private-key =

# Amount of Coin Asset to be used for each commit_block_operation created by producers
commit-coin-amount = 1

# declare an appender named "stderr" that writes messages to the console
[log.console_appender.stderr]
stream=std_error

# declare an appender named "p2p" that writes messages to p2p.log
[log.file_appender.p2p]
filename=logs/p2p/p2p.log
# filename can be absolute or relative to this config file

# route any messages logged to the default logger to the "stderr" logger we
# declared above, if they are info level are higher
[logger.default]
level=info
appenders=stderr

# route messages sent to the "p2p" logger to stderr too
[logger.p2p]
level=info
appenders=stderr


